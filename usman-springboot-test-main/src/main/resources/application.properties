#Basic service configuration
server.port=8085
spring.application.name=test-service
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

#MS-SQL database server configuration
spring.datasource.url=${datasource_url:jdbc:sqlserver://mssql-server-millennial-dev-sit.database.windows.net;databaseName=mssql-database-millennial-dev}
spring.datasource.username=${datasource_username:customer_dev}
spring.datasource.password=${datasource_password:BseDijS55Y}
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.properties.hibernate.default_schema=customerDB
spring.jpa.hibernate.ddl-auto=none
spring.datasource.platform=h2
spring.datasource.initialization-mode=always
spring.data.jpa.repositories.bootstrap-mode=default
spring.flyway.baselineOnMigrate = true
spring.flyway.enabled=false
spring.jpa.properties.hibernate.format_sql=true

#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout=${datasource_connection-timeout:20000}
#minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle=${datasource_minimum-idle:10}
#maximum pool size
spring.datasource.hikari.maximum-pool-size=${datasource_maximum-pool-size:100}
#maximum idle time for connection
spring.datasource.hikari.idle-timeout=${datasource_idle-timeout:10000}
# maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.max-lifetime=${datasource_max-lifetime:10000}

#Web Client Timeouts
web.api.connection.timeout=5000
web.api.connection.read.timeout=5
web.api.connection.write.timeout=5
